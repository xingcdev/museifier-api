spring:
  datasource:
    url: jdbc:h2:mem:test-db;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;
    username: sa
    password: password
    driverClassName: org.h2.Driver
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${museum.oauth2.issuer-uri}
          # Point to the URI containing the public key so that our Resource Server can verify the tokensâ€™ integrity.
          jwk-set-uri: ${museum.oauth2.jwk-uri}
  application:
    name: museum
  jpa:
    hibernate:
      # Disable Hibernate database initialization because we want to use 'schema.sql'
      ddl-auto: none
  h2:
    console:
      enabled: true

# ====== Disabled in prod ======
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    oauth:
      client-id: ${museum.oauth2.client-id}
      client-secret: ${museum.oauth2.client-secret}
      scopes: ${museum.oauth2.scopes}
# ==============================

museum:
  oauth2:
    client-id: dtiMy6xitk6niYDU2LGZmMT6qymK5t978TqaoKUu
    client-secret: eszO6Kp9VxhxxXz1YIX3IWyOIXpRrR7z
    scopes: "openid"
    issuer-uri: http://localhost:9000/realms/museum-dev
    token-uri: http://localhost:9000/realms/museum-dev/protocol/openid-connect/token
    jwk-uri: http://localhost:9000/realms/museum-dev/protocol/openid-connect/certs
debug: true